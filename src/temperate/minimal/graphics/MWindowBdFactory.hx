package temperate.minimal.graphics;
import flash.display.BitmapData;
import flash.display.GradientType;
import flash.display.Graphics;
import flash.geom.Matrix;
import temperate.components.CButtonState;
using temperate.core.CMath;
using temperate.core.CGraphicsUtil;

class MWindowBdFactory 
{
	static var DEFAULT_STRIAE_SIZE = 20;
	static var MAX_HEAD_HEIGHT = 50;
	
	public static inline var FRAME_CENTER_TOP = 30;
	
	public static var gradientHeight = 24;
	public static var striaeColor:Int = 0x80ffffff;
	public static var striaeBgColor:Int = 0x00ffffff;
	public static var headTopColor:Int = 0xf8407015;
	public static var headBottomColor:Int = 0xe080c030;
	public static var headTopActiveColor:Int = 0xf8508000;
	public static var headBottomActiveColor:Int = 0xe0a0e020;
	public static var headTopLockedColor:Int = 0xf0808080;
	public static var headBottomLockedColor:Int = 0xf0cccccc;
	
	static function newStriae(color:Int, bgColor:Int, space:Int, size:Int)
	{
		MBdFactoryUtil.qualityOn();
		var shape = MBdFactoryUtil.getShape();
		
		var g = shape.graphics;
		g.clear();
		g.beginFill(color.getColor(), color.getAlpha());
		var x = -DEFAULT_STRIAE_SIZE;
		while (x < DEFAULT_STRIAE_SIZE)
		{
			g.moveTo(x + DEFAULT_STRIAE_SIZE, 0);
			g.lineTo(x, DEFAULT_STRIAE_SIZE);
			g.lineTo(x + size, DEFAULT_STRIAE_SIZE);
			g.lineTo(x + DEFAULT_STRIAE_SIZE + size, 0);
			g.lineTo(x + DEFAULT_STRIAE_SIZE, 0);
			x += space + size;
		}
		
		var bitmapData = new BitmapData(DEFAULT_STRIAE_SIZE, DEFAULT_STRIAE_SIZE, true, bgColor);
		bitmapData.draw(shape);
		
		MBdFactoryUtil.qualityOff();
		return bitmapData;
	}
	
	static function newFrame(width:Int, height:Int, lineTop:Int)
	{
		MBdFactoryUtil.qualityOn();
		var shape = MBdFactoryUtil.getShape();
		
		var g = shape.graphics;
		g.clear();
		
		g.drawBottomRightBorder(2, 2, width, height, 8, 0x000000, .2, 2, false);
		g.drawRoundRectBorder(0, 0, width, height, 6, 0x505050, 1, 1);
		
		g.beginFill(0xeeeeee);
		g.drawRoundRectComplexStepByStep(1, lineTop, width - 2, height - lineTop - 1, 0, 0, 5, 5);
		g.endFill();
		
		g.beginFill(0xffffff);
		drawShortedBottomRightBorder(g, 1, lineTop, width - 2, height - lineTop - 1, 5, 1);
		g.endFill();
		
		var matrix = new Matrix();
		matrix.createGradientBox(10, lineTop, Math.PI * .5);
		
		g.beginGradientFill(GradientType.LINEAR, [0xffffff, 0xffffff], [.5, 1], [0, 255], matrix);
		g.drawTopRoundRectBorder(1, 1, width - 2, lineTop - 1, 5, 1);
		g.endFill();
		
		g.beginFill(0xffffff, .6);
		g.drawRect(2, lineTop - 2, width - 4, 1);
		g.endFill();
		
		g.beginFill(0x000000, .2);
		g.drawRect(2, lineTop - 1, width - 4, 1);
		g.endFill();
		
		var bd = new BitmapData(width + 2, height + 2, true, 0x00000000);
		bd.draw(shape);
		MBdFactoryUtil.qualityOff();
		return bd;
	}
	
	static function newTop(striae:BitmapData, topColor:Int, bottomColor:Int)
	{
		MBdFactoryUtil.qualityOn();
		var shape = MBdFactoryUtil.getShape();
		
		var g = shape.graphics;
		g.clear();
		
		var width = striae.width;
		
		var matrix = new Matrix();
		matrix.createGradientBox(10, gradientHeight, Math.PI * .5);
		g.beginGradientFill(
			GradientType.LINEAR,
			[topColor.getColor(), bottomColor.getColor()],
			[topColor.getAlpha(), bottomColor.getAlpha()],
			[0, 255], matrix);
		g.drawRect(0, 0, width, MAX_HEAD_HEIGHT);
		g.endFill();
		
		g.beginBitmapFill(striae);
		g.drawRect(0, 0, width, MAX_HEAD_HEIGHT);
		g.endFill();
		
		var bd = new BitmapData(width, MAX_HEAD_HEIGHT, true, 0x000000);
		bd.draw(shape);
		MBdFactoryUtil.qualityOff();
		return bd;
	}
	
	static function drawShortedBottomRightBorder(
		g:Graphics,
		x:Float, y:Float, width:Float, height:Float, radius:Int, thickness:Int):Void
	{
		var x1 = x + width;
		var y1 = y + height;
		
		g.moveTo(x1 - thickness, y);
		g.lineTo(x1, y);
		g.lineTo(x1, y1 - radius);
		g.curveTo(x1, y1, x1 - radius, y1);
		g.lineTo(x + radius, y1);
		g.curveTo(x, y1, x, y1 - radius);
		g.curveTo(x, y1 - thickness, x + radius, y1 - thickness);
		g.lineTo(x1 - radius, y1 - thickness);
		g.curveTo(x1 - thickness, y1 - thickness, x1 - thickness, y1 - radius);
		g.lineTo(x1 - thickness, y);
	}
	
	static var _defaultStriae:BitmapData;
	
	public static function getDefaultStriae():BitmapData
	{
		if (_defaultStriae == null)
		{
			_defaultStriae = newStriae(striaeColor, striaeBgColor, 4, 1);
		}
		return _defaultStriae;
	}
	
	static var _frame:BitmapData;
	
	public static function getFrame():BitmapData
	{
		if (_frame == null)
		{
			_frame = newFrame(100, 100, FRAME_CENTER_TOP);
		}
		return _frame;
	}
	
	static var _defaultTop:BitmapData;
	
	public static function getDefaultTop():BitmapData
	{
		if (_defaultTop == null)
		{
			_defaultTop = newTop(getDefaultStriae(), headTopColor, headBottomColor);
		}
		return _defaultTop;
	}
	
	static var _lockedTop:BitmapData;
	
	public static function getLockedTop():BitmapData
	{
		if (_lockedTop == null)
		{
			_lockedTop = newTop(getDefaultStriae(), headTopLockedColor, headBottomLockedColor);
		}
		return _lockedTop;
	}
	
	static var _activeTop:BitmapData;
	
	public static function getActiveTop():BitmapData
	{
		if (_activeTop == null)
		{
			_activeTop = newTop(getDefaultStriae(), headTopActiveColor, headBottomActiveColor);
		}
		return _activeTop;
	}
	
	//----------------------------------------------------------------------------------------------
	//
	//  Images
	//
	//----------------------------------------------------------------------------------------------
	
	static var _imageClose:Array<BitmapData>;
	public static function getImageClose(state:CButtonState):BitmapData
	{
		if (_imageClose == null)
		{
			_imageClose = [];
		}
		var image = _imageClose[state.index];
		if (image == null)
		{
			var source = switch (state)
			{
				case CButtonState.UP:
					[0x10, 0x18, 0xa3, 0x0, 0x1e000000, 0x5e000000, 0x6a000000, 
					0x36000000, 0xa000000, 0x9, 0x0, 0xa000000, 0x36000000, 0x6a000000, 
					0x5e000000, 0x1e000000, 0x5, 0x0, 0x5e000000, 0x5, 0xfffffffe, 
					0xb5868686, 0x4e000000, 0xa000000, 0x5, 0x0, 0xa000000, 0x4e000000, 
					0xb5868686, 0x5, 0xfffffffe, 0x5e000000, 0x5, 0x0, 0x72000000, 
					0x7, 0xfffffffe, 0xb9838382, 0x4e000000, 0x5, 0xa000000, 0x4e000000, 
					0xb9838382, 0x7, 0xfffffffe, 0x72000000, 0x5, 0x0, 0x46000000, 
					0xc3cfcfce, 0x7, 0xfffffffe, 0xb9838382, 0x5, 0x5a000000, 0xb9838382, 
					0x7, 0xfffffffe, 0xc3cfcfce, 0x46000000, 0x5, 0x0, 0x12000000, 
					0x6e000000, 0xc3cfcfce, 0x7, 0xfffffffe, 0x5, 0xc37c7c7c, 0x7, 
					0xfffffffe, 0xc3cfcfce, 0x6e000000, 0x12000000, 0x7, 0x0, 0x12000000, 
					0x6e000000, 0xc3cfcfce, 0xd, 0xfffffffe, 0xc3cfcfce, 0x6e000000, 0x12000000, 
					0xb, 0x0, 0x12000000, 0x7a000000, 0xc3cfcfce, 0x9, 0xfffffffe, 
					0xc3cfcfce, 0x7a000000, 0x12000000, 0xd, 0x0, 0xa000000, 0x62000000, 
					0xc37c7c7c, 0x9, 0xfffffffe, 0xc37c7c7c, 0x62000000, 0xa000000, 0xb, 
					0x0, 0xa000000, 0x4e000000, 0xb9838382, 0xd, 0xfffffffe, 0xb9838382, 
					0x4e000000, 0xa000000, 0x7, 0x0, 0xa000000, 0x4e000000, 0xb9838382, 
					0x7, 0xfffffffe, 0x5, 0xc3cfcfce, 0x7, 0xfffffffe, 0xb9838382, 
					0x4e000000, 0xa000000, 0x5, 0x0, 0x36000000, 0xb5868686, 0x7, 
					0xfffffffe, 0xc3cfcfce, 0x5, 0x82000000, 0xc3cfcfce, 0x7, 0xfffffffe, 
					0xb5868686, 0x36000000, 0x5, 0x0, 0x6a000000, 0x7, 0xfffffffe, 
					0xc3cfcfce, 0x6e000000, 0x5, 0x12000000, 0x6e000000, 0xc3cfcfce, 0x7, 
					0xfffffffe, 0x6a000000, 0x5, 0x0, 0x5e000000, 0x5, 0xfffffffe, 
					0xc3cfcfce, 0x6e000000, 0x12000000, 0x5, 0x0, 0x12000000, 0x6e000000, 
					0xc3cfcfce, 0x5, 0xfffffffe, 0x5e000000, 0x5, 0x0, 0x1e000000, 
					0x5e000000, 0x72000000, 0x46000000, 0x12000000, 0x9, 0x0, 0x12000000, 
					0x46000000, 0x72000000, 0x5e000000, 0x1e000000, 0xa1, 0x0, 0x0];
				case CButtonState.OVER:
					[0x10, 0x18, 0xa3, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x6a7f7f00, 
					0x367f7f00, 0xa7f7f00, 0x9, 0x0, 0xa7f7f00, 0x367f7f00, 0x6a7f7f00, 
					0x5e7f7f00, 0x1e7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x5, 0xfffffffe, 
					0xb5c1c186, 0x4e7f7f00, 0xa7f7f00, 0x5, 0x0, 0xa7f7f00, 0x4e7f7f00, 
					0xb5c1c186, 0x5, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x727f7f00, 
					0x7, 0xfffffffe, 0xb9c0c082, 0x4e7f7f00, 0x5, 0xa7f7f00, 0x4e7f7f00, 
					0xb9c0c082, 0x7, 0xfffffffe, 0x727f7f00, 0x5, 0x0, 0x467f7f00, 
					0xc3e7e7ce, 0x7, 0xfffffffe, 0xb9c0c082, 0x5, 0x5a7f7f00, 0xb9c0c082, 
					0x7, 0xfffffffe, 0xc3e7e7ce, 0x467f7f00, 0x5, 0x0, 0x127f7f00, 
					0x6e7f7f00, 0xc3e7e7ce, 0x7, 0xfffffffe, 0x5, 0xc3bdbd7c, 0x7, 
					0xfffffffe, 0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 0x7, 0x0, 0x127f7f00, 
					0x6e7f7f00, 0xc3e7e7ce, 0xd, 0xfffffffe, 0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 
					0xb, 0x0, 0x127f7f00, 0x7a7f7f00, 0xc3e7e7ce, 0x9, 0xfffffffe, 
					0xc3e7e7ce, 0x7a7f7f00, 0x127f7f00, 0xd, 0x0, 0xa7f7f00, 0x627f7f00, 
					0xc3bdbd7c, 0x9, 0xfffffffe, 0xc3bdbd7c, 0x627f7f00, 0xa7f7f00, 0xb, 
					0x0, 0xa7f7f00, 0x4e7f7f00, 0xb9c0c082, 0xd, 0xfffffffe, 0xb9c0c082, 
					0x4e7f7f00, 0xa7f7f00, 0x7, 0x0, 0xa7f7f00, 0x4e7f7f00, 0xb9c0c082, 
					0x7, 0xfffffffe, 0x5, 0xc3e7e7ce, 0x7, 0xfffffffe, 0xb9c0c082, 
					0x4e7f7f00, 0xa7f7f00, 0x5, 0x0, 0x367f7f00, 0xb5c1c186, 0x7, 
					0xfffffffe, 0xc3e7e7ce, 0x5, 0x827f7f00, 0xc3e7e7ce, 0x7, 0xfffffffe, 
					0xb5c1c186, 0x367f7f00, 0x5, 0x0, 0x6a7f7f00, 0x7, 0xfffffffe, 
					0xc3e7e7ce, 0x6e7f7f00, 0x5, 0x127f7f00, 0x6e7f7f00, 0xc3e7e7ce, 0x7, 
					0xfffffffe, 0x6a7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x5, 0xfffffffe, 
					0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 0x5, 0x0, 0x127f7f00, 0x6e7f7f00, 
					0xc3e7e7ce, 0x5, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x1e7f7f00, 
					0x5e7f7f00, 0x727f7f00, 0x467f7f00, 0x127f7f00, 0x9, 0x0, 0x127f7f00, 
					0x467f7f00, 0x727f7f00, 0x5e7f7f00, 0x1e7f7f00, 0xa1, 0x0, 0x0];
				case CButtonState.DOWN:
					[0x10, 0x18, 0xc5, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x6a7f7f00, 
					0x367f7f00, 0xa7f7f00, 0x9, 0x0, 0xa7f7f00, 0x367f7f00, 0x6a7f7f00, 
					0x5e7f7f00, 0x1e7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x5, 0xfffffffe, 
					0xb5c1c186, 0x4e7f7f00, 0xa7f7f00, 0x5, 0x0, 0xa7f7f00, 0x4e7f7f00, 
					0xb5c1c186, 0x5, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x727f7f00, 
					0x7, 0xfffffffe, 0xb9c0c082, 0x4e7f7f00, 0x5, 0xa7f7f00, 0x4e7f7f00, 
					0xb9c0c082, 0x7, 0xfffffffe, 0x727f7f00, 0x5, 0x0, 0x467f7f00, 
					0xc3e7e7ce, 0x7, 0xfffffffe, 0xb9c0c082, 0x5, 0x5a7f7f00, 0xb9c0c082, 
					0x7, 0xfffffffe, 0xc3e7e7ce, 0x467f7f00, 0x5, 0x0, 0x127f7f00, 
					0x6e7f7f00, 0xc3e7e7ce, 0x7, 0xfffffffe, 0x5, 0xc3bdbd7c, 0x7, 
					0xfffffffe, 0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 0x7, 0x0, 0x127f7f00, 
					0x6e7f7f00, 0xc3e7e7ce, 0xd, 0xfffffffe, 0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 
					0xb, 0x0, 0x127f7f00, 0x7a7f7f00, 0xc3e7e7ce, 0x9, 0xfffffffe, 
					0xc3e7e7ce, 0x7a7f7f00, 0x127f7f00, 0xd, 0x0, 0xa7f7f00, 0x627f7f00, 
					0xc3bdbd7c, 0x9, 0xfffffffe, 0xc3bdbd7c, 0x627f7f00, 0xa7f7f00, 0xb, 
					0x0, 0xa7f7f00, 0x4e7f7f00, 0xb9c0c082, 0xd, 0xfffffffe, 0xb9c0c082, 
					0x4e7f7f00, 0xa7f7f00, 0x7, 0x0, 0xa7f7f00, 0x4e7f7f00, 0xb9c0c082, 
					0x7, 0xfffffffe, 0x5, 0xc3e7e7ce, 0x7, 0xfffffffe, 0xb9c0c082, 
					0x4e7f7f00, 0xa7f7f00, 0x5, 0x0, 0x367f7f00, 0xb5c1c186, 0x7, 
					0xfffffffe, 0xc3e7e7ce, 0x5, 0x827f7f00, 0xc3e7e7ce, 0x7, 0xfffffffe, 
					0xb5c1c186, 0x367f7f00, 0x5, 0x0, 0x6a7f7f00, 0x7, 0xfffffffe, 
					0xc3e7e7ce, 0x6e7f7f00, 0x5, 0x127f7f00, 0x6e7f7f00, 0xc3e7e7ce, 0x7, 
					0xfffffffe, 0x6a7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x5, 0xfffffffe, 
					0xc3e7e7ce, 0x6e7f7f00, 0x127f7f00, 0x5, 0x0, 0x127f7f00, 0x6e7f7f00, 
					0xc3e7e7ce, 0x5, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x1e7f7f00, 
					0x5e7f7f00, 0x727f7f00, 0x467f7f00, 0x127f7f00, 0x9, 0x0, 0x127f7f00, 
					0x467f7f00, 0x727f7f00, 0x5e7f7f00, 0x1e7f7f00, 0x7f, 0x0, 0x0];
				case CButtonState.DISABLED:
					[0x10, 0x18, 0xa3, 0x0, 0xf000000, 0x2f000000, 0x35000000, 
					0x1b000000, 0x5000000, 0x9, 0x0, 0x5000000, 0x1b000000, 0x35000000, 
					0x2f000000, 0xf000000, 0x5, 0x0, 0x2f000000, 0x5, 0x80fffffe, 
					0x67777776, 0x27000000, 0x5000000, 0x5, 0x0, 0x5000000, 0x27000000, 
					0x67777776, 0x5, 0x80fffffe, 0x2f000000, 0x5, 0x0, 0x39000000, 
					0x7, 0x80fffffe, 0x6a737372, 0x27000000, 0x5, 0x5000000, 0x27000000, 
					0x6a737372, 0x7, 0x80fffffe, 0x39000000, 0x5, 0x0, 0x23000000, 
					0x71b4b4b4, 0x7, 0x80fffffe, 0x6a737372, 0x5, 0x2d000000, 0x6a737372, 
					0x7, 0x80fffffe, 0x71b4b4b4, 0x23000000, 0x5, 0x0, 0x9000000, 
					0x37000000, 0x71b4b4b4, 0x7, 0x80fffffe, 0x5, 0x716c6c6c, 0x7, 
					0x80fffffe, 0x71b4b4b4, 0x37000000, 0x9000000, 0x7, 0x0, 0x9000000, 
					0x37000000, 0x71b4b4b4, 0xd, 0x80fffffe, 0x71b4b4b4, 0x37000000, 0x9000000, 
					0xb, 0x0, 0x9000000, 0x3d000000, 0x71b4b4b4, 0x9, 0x80fffffe, 
					0x71b4b4b4, 0x3d000000, 0x9000000, 0xd, 0x0, 0x5000000, 0x31000000, 
					0x716c6c6c, 0x9, 0x80fffffe, 0x716c6c6c, 0x31000000, 0x5000000, 0xb, 
					0x0, 0x5000000, 0x27000000, 0x6a737372, 0xd, 0x80fffffe, 0x6a737372, 
					0x27000000, 0x5000000, 0x7, 0x0, 0x5000000, 0x27000000, 0x6a737372, 
					0x7, 0x80fffffe, 0x5, 0x71b4b4b4, 0x7, 0x80fffffe, 0x6a737372, 
					0x27000000, 0x5000000, 0x5, 0x0, 0x1b000000, 0x67777776, 0x7, 
					0x80fffffe, 0x71b4b4b4, 0x5, 0x41000000, 0x71b4b4b4, 0x7, 0x80fffffe, 
					0x67777776, 0x1b000000, 0x5, 0x0, 0x35000000, 0x7, 0x80fffffe, 
					0x71b4b4b4, 0x37000000, 0x5, 0x9000000, 0x37000000, 0x71b4b4b4, 0x7, 
					0x80fffffe, 0x35000000, 0x5, 0x0, 0x2f000000, 0x5, 0x80fffffe, 
					0x71b4b4b4, 0x37000000, 0x9000000, 0x5, 0x0, 0x9000000, 0x37000000, 
					0x71b4b4b4, 0x5, 0x80fffffe, 0x2f000000, 0x5, 0x0, 0xf000000, 
					0x2f000000, 0x39000000, 0x23000000, 0x9000000, 0x9, 0x0, 0x9000000, 
					0x23000000, 0x39000000, 0x2f000000, 0xf000000, 0xa1, 0x0, 0x0];
				default:
					null;
			}
			if (source != null)
			{
				image = MBdInlineUtil.decode(source);
				_imageClose[state.index] = image;
			}
		}
		return image;
	}
	
	static var _imageMaximize:Array<BitmapData>;
	public static function getImageMaximize(state:CButtonState):BitmapData
	{
		if (_imageMaximize == null)
		{
			_imageMaximize = [];
		}
		var image = _imageMaximize[state.index];
		if (image == null)
		{
			var source = switch (state)
			{
				case CButtonState.UP:
					[0x10, 0x18, 0xa3, 0x0, 0x1e000000, 0x5e000000, 0x15, 
					0x7e000000, 0x5e000000, 0x1e000000, 0x5, 0x0, 0x5e000000, 0x19, 
					0xfffffffe, 0x5e000000, 0x5, 0x0, 0x7e000000, 0x19, 0xfffffffe, 
					0x7e000000, 0x5, 0x0, 0x7e000000, 0x19, 0xfffffffe, 0x7e000000, 
					0x5, 0x0, 0x7e000000, 0x5, 0xfffffffe, 0xde000000, 0xd, 
					0x7e000000, 0xde000000, 0x5, 0xfffffffe, 0x7e000000, 0x5, 0x0, 
					0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 0xd, 0x0, 0x7e000000, 
					0x5, 0xfffffffe, 0x7e000000, 0x5, 0x0, 0x7e000000, 0x5, 
					0xfffffffe, 0x7e000000, 0xd, 0x0, 0x7e000000, 0x5, 0xfffffffe, 
					0x7e000000, 0x5, 0x0, 0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 
					0xd, 0x0, 0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 0x5, 
					0x0, 0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 0xd, 0x0, 
					0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 0x5, 0x0, 0x7e000000, 
					0x5, 0xfffffffe, 0x7e000000, 0xd, 0x0, 0x7e000000, 0x5, 
					0xfffffffe, 0x7e000000, 0x5, 0x0, 0x7e000000, 0x5, 0xfffffffe, 
					0xde000000, 0xd, 0x7e000000, 0xde000000, 0x5, 0xfffffffe, 0x7e000000, 
					0x5, 0x0, 0x7e000000, 0x19, 0xfffffffe, 0x7e000000, 0x5, 
					0x0, 0x5e000000, 0x19, 0xfffffffe, 0x5e000000, 0x5, 0x0, 
					0x1e000000, 0x5e000000, 0x15, 0x7e000000, 0x5e000000, 0x1e000000, 0xa1, 
					0x0, 0x0];
				case CButtonState.OVER:
					[0x10, 0x18, 0xa3, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x15, 
					0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x19, 
					0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 
					0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0xd, 
					0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 
					0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 
					0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 
					0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0xd, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 
					0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 
					0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 
					0xde7f7f00, 0xd, 0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x5e7f7f00, 0x19, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 
					0x1e7f7f00, 0x5e7f7f00, 0x15, 0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0xa1, 
					0x0, 0x0];
				case CButtonState.DOWN:
					[0x10, 0x18, 0xc5, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x15, 
					0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0x5, 0x0, 0x5e7f7f00, 0x19, 
					0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 
					0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0xd, 
					0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 
					0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 
					0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 
					0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0xd, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 
					0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 
					0x5, 0xfffffffe, 0x7e7f7f00, 0xd, 0x0, 0x7e7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 
					0xde7f7f00, 0xd, 0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x19, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x5e7f7f00, 0x19, 0xfffffffe, 0x5e7f7f00, 0x5, 0x0, 
					0x1e7f7f00, 0x5e7f7f00, 0x15, 0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0x7f, 
					0x0, 0x0];
				case CButtonState.DISABLED:
					[0x10, 0x18, 0xa3, 0x0, 0xf000000, 0x2f000000, 0x15, 
					0x3f000000, 0x2f000000, 0xf000000, 0x5, 0x0, 0x2f000000, 0x19, 
					0x80fffffe, 0x2f000000, 0x5, 0x0, 0x3f000000, 0x19, 0x80fffffe, 
					0x3f000000, 0x5, 0x0, 0x3f000000, 0x19, 0x80fffffe, 0x3f000000, 
					0x5, 0x0, 0x3f000000, 0x5, 0x80fffffe, 0x6f000000, 0xd, 
					0x3f000000, 0x6f000000, 0x5, 0x80fffffe, 0x3f000000, 0x5, 0x0, 
					0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 0xd, 0x0, 0x3f000000, 
					0x5, 0x80fffffe, 0x3f000000, 0x5, 0x0, 0x3f000000, 0x5, 
					0x80fffffe, 0x3f000000, 0xd, 0x0, 0x3f000000, 0x5, 0x80fffffe, 
					0x3f000000, 0x5, 0x0, 0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 
					0xd, 0x0, 0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 0x5, 
					0x0, 0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 0xd, 0x0, 
					0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 0x5, 0x0, 0x3f000000, 
					0x5, 0x80fffffe, 0x3f000000, 0xd, 0x0, 0x3f000000, 0x5, 
					0x80fffffe, 0x3f000000, 0x5, 0x0, 0x3f000000, 0x5, 0x80fffffe, 
					0x6f000000, 0xd, 0x3f000000, 0x6f000000, 0x5, 0x80fffffe, 0x3f000000, 
					0x5, 0x0, 0x3f000000, 0x19, 0x80fffffe, 0x3f000000, 0x5, 
					0x0, 0x2f000000, 0x19, 0x80fffffe, 0x2f000000, 0x5, 0x0, 
					0xf000000, 0x2f000000, 0x15, 0x3f000000, 0x2f000000, 0xf000000, 0xa1, 
					0x0, 0x0];
				default:
					null;
			}
			if (source != null)
			{
				image = MBdInlineUtil.decode(source);
				_imageMaximize[state.index] = image;
			}
		}
		return image;
	}
	
	static var _imageCollapse:Array<BitmapData>;
	public static function getImageCollapse(state:CButtonState):BitmapData
	{
		if (_imageCollapse == null)
		{
			_imageCollapse = [];
		}
		var image = _imageCollapse[state.index];
		if (image == null)
		{
			var source = switch (state)
			{
				case CButtonState.UP:
					[0x10, 0x18, 0xa9, 0x0, 0x1e000000, 0x5e000000, 0xf, 
					0x7e000000, 0x5e000000, 0x1e000000, 0xb, 0x0, 0x5e000000, 0x13, 
					0xfffffffe, 0x5e000000, 0xb, 0x0, 0x7e000000, 0x13, 0xfffffffe, 
					0x7e000000, 0xb, 0x0, 0x5e000000, 0x13, 0xfffffffe, 0x7e000000, 
					0x5, 0x0, 0x1e000000, 0x5e000000, 0x7e000000, 0x9e000000, 0xde000000, 
					0x9, 0xfe000000, 0xde000000, 0xfe000000, 0x5, 0xfffffffe, 0x7e000000, 
					0x5, 0x0, 0x5e000000, 0x13, 0xfffffffe, 0xde000000, 0x5, 
					0xfffffffe, 0x7e000000, 0x5, 0x0, 0x7e000000, 0x13, 0xfffffffe, 
					0xfe000000, 0x5, 0xfffffffe, 0x7e000000, 0x5, 0x0, 0x7e000000, 
					0x13, 0xfffffffe, 0xfe000000, 0x5, 0xfffffffe, 0x7e000000, 0x5, 
					0x0, 0x7e000000, 0x5, 0xfffffffe, 0xde000000, 0x7, 0x7e000000, 
					0xde000000, 0x5, 0xfffffffe, 0xde000000, 0x5, 0xfffffffe, 0x5e000000, 
					0x5, 0x0, 0x7e000000, 0x5, 0xfffffffe, 0x7e000000, 0x7, 
					0x0, 0x7e000000, 0x5, 0xfffffffe, 0x9e000000, 0x5, 0x5e000000, 
					0x1e000000, 0x5, 0x0, 0x7e000000, 0x5, 0xfffffffe, 0xde000000, 
					0x7, 0x7e000000, 0xde000000, 0x5, 0xfffffffe, 0x7e000000, 0xb, 
					0x0, 0x7e000000, 0x13, 0xfffffffe, 0x7e000000, 0xb, 0x0, 
					0x5e000000, 0x13, 0xfffffffe, 0x5e000000, 0xb, 0x0, 0x1e000000, 
					0x5e000000, 0xf, 0x7e000000, 0x5e000000, 0x1e000000, 0xa7, 0x0, 
					0x0];
				case CButtonState.OVER:
					[0x10, 0x18, 0xa9, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0xf, 
					0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0xb, 0x0, 0x5e7f7f00, 0x13, 
					0xfffffffe, 0x5e7f7f00, 0xb, 0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 
					0x7e7f7f00, 0xb, 0x0, 0x5e7f7f00, 0x13, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x7e7f7f00, 0x9e7f7f00, 0xde7f7f00, 
					0x9, 0xfe7f7f00, 0xde7f7f00, 0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x5e7f7f00, 0x13, 0xfffffffe, 0xde7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 
					0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 
					0x13, 0xfffffffe, 0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0x7, 0x7e7f7f00, 
					0xde7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0x5, 0xfffffffe, 0x5e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x7, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x9e7f7f00, 0x5, 0x5e7f7f00, 
					0x1e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 
					0x7, 0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xb, 
					0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 0x7e7f7f00, 0xb, 0x0, 
					0x5e7f7f00, 0x13, 0xfffffffe, 0x5e7f7f00, 0xb, 0x0, 0x1e7f7f00, 
					0x5e7f7f00, 0xf, 0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0xa7, 0x0, 
					0x0];
				case CButtonState.DOWN:
					[0x10, 0x18, 0xcb, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0xf, 
					0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0xb, 0x0, 0x5e7f7f00, 0x13, 
					0xfffffffe, 0x5e7f7f00, 0xb, 0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 
					0x7e7f7f00, 0xb, 0x0, 0x5e7f7f00, 0x13, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x1e7f7f00, 0x5e7f7f00, 0x7e7f7f00, 0x9e7f7f00, 0xde7f7f00, 
					0x9, 0xfe7f7f00, 0xde7f7f00, 0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 
					0x5, 0x0, 0x5e7f7f00, 0x13, 0xfffffffe, 0xde7f7f00, 0x5, 
					0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 
					0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 0x0, 0x7e7f7f00, 
					0x13, 0xfffffffe, 0xfe7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x5, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0x7, 0x7e7f7f00, 
					0xde7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 0x5, 0xfffffffe, 0x5e7f7f00, 
					0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0x7, 
					0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0x9e7f7f00, 0x5, 0x5e7f7f00, 
					0x1e7f7f00, 0x5, 0x0, 0x7e7f7f00, 0x5, 0xfffffffe, 0xde7f7f00, 
					0x7, 0x7e7f7f00, 0xde7f7f00, 0x5, 0xfffffffe, 0x7e7f7f00, 0xb, 
					0x0, 0x7e7f7f00, 0x13, 0xfffffffe, 0x7e7f7f00, 0xb, 0x0, 
					0x5e7f7f00, 0x13, 0xfffffffe, 0x5e7f7f00, 0xb, 0x0, 0x1e7f7f00, 
					0x5e7f7f00, 0xf, 0x7e7f7f00, 0x5e7f7f00, 0x1e7f7f00, 0x85, 0x0, 
					0x0];
				case CButtonState.DISABLED:
					[0x10, 0x18, 0xa9, 0x0, 0xf000000, 0x2f000000, 0xf, 
					0x3f000000, 0x2f000000, 0xf000000, 0xb, 0x0, 0x2f000000, 0x13, 
					0x80fffffe, 0x2f000000, 0xb, 0x0, 0x3f000000, 0x13, 0x80fffffe, 
					0x3f000000, 0xb, 0x0, 0x2f000000, 0x13, 0x80fffffe, 0x3f000000, 
					0x5, 0x0, 0xf000000, 0x2f000000, 0x3f000000, 0x4f000000, 0x6f000000, 
					0x9, 0x7f000000, 0x6f000000, 0x7f000000, 0x5, 0x80fffffe, 0x3f000000, 
					0x5, 0x0, 0x2f000000, 0x13, 0x80fffffe, 0x6f000000, 0x5, 
					0x80fffffe, 0x3f000000, 0x5, 0x0, 0x3f000000, 0x13, 0x80fffffe, 
					0x7f000000, 0x5, 0x80fffffe, 0x3f000000, 0x5, 0x0, 0x3f000000, 
					0x13, 0x80fffffe, 0x7f000000, 0x5, 0x80fffffe, 0x3f000000, 0x5, 
					0x0, 0x3f000000, 0x5, 0x80fffffe, 0x6f000000, 0x7, 0x3f000000, 
					0x6f000000, 0x5, 0x80fffffe, 0x6f000000, 0x5, 0x80fffffe, 0x2f000000, 
					0x5, 0x0, 0x3f000000, 0x5, 0x80fffffe, 0x3f000000, 0x7, 
					0x0, 0x3f000000, 0x5, 0x80fffffe, 0x4f000000, 0x5, 0x2f000000, 
					0xf000000, 0x5, 0x0, 0x3f000000, 0x5, 0x80fffffe, 0x6f000000, 
					0x7, 0x3f000000, 0x6f000000, 0x5, 0x80fffffe, 0x3f000000, 0xb, 
					0x0, 0x3f000000, 0x13, 0x80fffffe, 0x3f000000, 0xb, 0x0, 
					0x2f000000, 0x13, 0x80fffffe, 0x2f000000, 0xb, 0x0, 0xf000000, 
					0x2f000000, 0xf, 0x3f000000, 0x2f000000, 0xf000000, 0xa7, 0x0, 
					0x0];
				default:
					null;
			}
			if (source != null)
			{
				image = MBdInlineUtil.decode(source);
				_imageCollapse[state.index] = image;
			}
		}
		return image;
	}
}